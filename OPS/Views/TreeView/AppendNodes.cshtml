@using QuoteTree
@{
    var Model = (SumSetNode)TempData["node"]!;
    var url = (string)TempData["url"]!;
    var dependentsVisibility = (string)TempData["dependentsVisibility"]!;
    var referencesVisibility = (string)TempData["referencesVisibility"]!;
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE">
    <meta HTTP-EQUIV="PRAGMA" CONTENT="NO-CACHE">
    <script src="../js/iframesize.js"></script>
    <title>Append Nodes</title>
    <script src="../js/jquery-3.7.1.min.js"></script>
 
    <script>
     function AppendNode(source) {
            //Post values to server
            var data = $('#formID').serialize();
            //First open the node
            top.asynchronous = false;
            if ($("ul[id='li_ul_@Model.Id']").children().length == 0)
                parent.$.jstree._reference("li[id='li_@Model.Id']").open_node("li[id='li_@Model.Id']");
            top.asynchronous = true;

            $.ajax({
                url: "AppendNode?sourceId=" + source + "&targetId=@Model.Id",
                type: 'GET',
                data: data,
                dataType: 'json',
                async: true,
                cache: false,
                beforeSend: function () {
                },
                complete: function () {
                    top.dialog.dialog("close");
                },
                success: function (result) {
                    if (result == "_SessionTimeout_") {
                        parent.document.location = "/SessionTimeOut.html";
                        return false;
                    }
                    //select the node
                    parent.$.jstree._reference("li[id='li_@Model.Id']").select_node("li[id='li_@Model.Id']");
                    //Insert the new node
                    parent.$("#container").jstree("create", null, parseInt(result.order), { "data": " ", "attr": { "class": "jstree-closed", "id": "li_" + result.id } }, false, true);
                    //remove the anchor so it will be re-created with UpdateNode()
                    parent.$("li[id='li_" + result.id + "']").children("a").remove();

                    //Set the id for the automatically generated ul
                    if (parent.$("li[id='li_" + result.id + "']").parent().attr("id") == undefined) {
                        parent.$("li[id='li_" + result.id + "']").parent().attr("id", "li_ul_@Model.Id");
                    }
                    parent.UpdateNode(result);
                    
                    //Update the price in the page
                    top.asynchronous = false;
                    var price = window.parent.document.getElementById("price");
                    $(price).text("Total: " + result.total);
                    if ($("input[id='editchildren_@Model.Id']", parent.document).attr("value") == "true") {
                        //Open the node
                        parent.$.jstree._reference("li[id='li_@Model.Id']").open_node("li[id='li_@Model.Id']");
                        var array = [];
                        var children = $("li[id='li_@Model.Id']", parent.document).children('ul').children('li');
                        for (var i = 0; i < children.length; i++) {
                            array[i] = children[i].id.replace(/li_/g, "");
                        }
                        parent.UpdateDependents(array);
                    }
                    else {
                        parent.UpdateDependents('@Model.Id');
                    }
                    top.asynchronous = true;

                },
                error: function (result) {
                    alert("Error updating price from server!");
                }
            });   //end ajax
        }

        // accending sort
        function asc_sort(a, b) {
            return ($(b).text()) < ($(a).text()) ? 1 : -1;
        }

        // decending sort
        function dec_sort(a, b) {
            return ($(b).text()) > ($(a).text()) ? 1 : -1;
        }

        //Receives a node's full path and opens the node
        function OpenNode(node) {
            var split = node.split('>');
            var current = "li[id='li_1']";
            top.asynchronous = false;
            for (var i = 0; i < split.length; i++) {
                //1:Open the node
                parent.$.jstree._reference(current).open_node(current, function () {

                    if (i == split.length - 1) {
                        parent.$.jstree._reference("li[id='li_@Model.Id']").deselect_all();
                        parent.$.jstree._reference(current).select_node(current);
                        $('html', parent.document).scrollTop($(current, parent.document).offset().top);
                    }
                    else {
                        //2:Get next node
                        var children = $(current, parent.document).children('ul').children('li');
                        for (var j = 0; j < children.length; j++) {
                            if ($(children[j]).children('a').children('span:first').text() == split[i + 1]) {
                                current = "li[id='" + $(children[j]).attr('id') + "']";
                                break;
                            }
                        }
                    }
                });
            }
            top.asynchronous = true;
        }

        function UnHideBranch(id) {
            $("li[id='li_" + id + "']", parent.document).show();
            parent.RefreshFillers(id,false);
            var parentulID = $("li[id='li_" + id + "']", parent.document).parent().attr("id");
            //Recursive call
            if ($("li[id='li_" + id + "']", parent.document).parent().parent().attr("id") != "container")
                UnHideBranch(parentulID.replace(/li_ul_/g, ""));
        }
    </script>
    <style>
         /* Light mode */
    @@media (prefers-color-scheme: light) {
        body {
                background-color: white;
                color: black;
            }
    
            li { background: FloralWhite; }
            li:nth-child(odd) { background: PowderBlue; }
        }

        /* Dark mode */
        @@media (prefers-color-scheme: dark) {
            body {
                background-color: black;
                color: white;
            }
        
            li { background: dimgray; }
            li:nth-child(odd) { background: gray; }
        }


        /* width */
        /*Custom scrollbar*/
        ::-webkit-scrollbar {
        width: 7px;
        }

        /* Track */
        ::-webkit-scrollbar-track {
        background: #f1f1f1; 
        }
        
        /* Handle */
        ::-webkit-scrollbar-thumb {
        background: #888; 
        }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
        background: #555; 
        }
    </style>
</head>
<body>
@using (Html.BeginForm("ChangeTreeValue", "TreeView", FormMethod.Get, new { id = "formID" }))
    {
        <div style="text-align:center">
            @{
                string s = Model.Parent!=null? Model.Parent.Name + " > " + Model.Name : Model.Name;
            }
            <span style="color:red; font-size:medium; font-style:italic">
                @s
            </span>
            <br />
            <br />
            @if (Model.Disabled){
            <label style="color:red">*Disabled* &nbsp;</label> <label style="font-size:small"> @Model.DisabledMessage</label>
            <br />
            }
            <table style="text-align:right; margin: auto">
                 @foreach(ANode node in Model.Children!){
                    @if (node.Template) {
                    <tr>
                        <td><input type="button" id="@node.Id" class="input" onclick="AppendNode(this.id);" value="Add" /></td>
                        <td>@node.Name</td>                        
                    </tr> 
                    }                
                }
            </table>
        </div>
    }
    <br />
    @{
       url = url.Replace("http:///","file:///");
    }
    <iframe scrolling="no" style="width: 100%; border-width: 0px" id="Iframe2" src='@Url.Action("GetHtml","TreeView")'> </iframe>

    <div id="deps" style="display: none;">
    <label id="depArrow" onclick="$('#dependents').toggle(); toggleArrowDependents();" style="color:blue; cursor: pointer;">DEPENDENTS ⬇️</label>
    <ol class="list_dependents" id="dependents">
       @foreach (string dependent in Model.Dependents!) {
        ANode dep = Model.ParentTree.GetNodeFromId(dependent)!;
        <li>
            <a title="@dep.GetPath()" onclick="OpenNode('@dep.GetPath().Replace("\\",">")'); UnHideBranch('@dep.Id');" href="@dep.Url.Contains("ChangeTreeValue")? @Url.Content("~/" + @dep.Url):"Description?id=" + @dep.Id">@dep.Name</a><label style="color: black; font-size:small" > (@dep.GetPath()) </label>
            </li>
        } 
    </ol>
    <br />
    </div>
    <div id="refs" style="display: none;">
        <label id="refArrow" onclick="$('#references').toggle(); toggleArrowReferences();" style="color:blue; cursor: pointer;">REFERENCES ⬇️</label>
        <ol class="list_references" id="references">
            @foreach (string reference in Model.References!) {
            ANode refe = Model.ParentTree.GetNodeFromId(reference)!;
            <li>
                <a title="@refe.GetPath()" onclick="OpenNode('@refe.GetPath().Replace("\\",">")'); UnHideBranch('@refe.Id');" href="@refe.Url.Contains("ChangeTreeValue")? @Url.Content("~/" + @refe.Url):"Description?id=" + @refe.Id">@refe.Name</a><label style="color: black; font-size:small" > (@refe.GetPath()) </label>
            </li>
            } 
        </ol>
        <br />
        <br />
    </div>
    <script>
        $(function () {
            $(".list_dependents li").sort(asc_sort).appendTo('.list_dependents');
            $(".list_references li").sort(asc_sort).appendTo('.list_references');
            
            $('#formID').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    $('.input').click();
                }
            });
        });  

         $( document ).ready(function() {
                var title = parent.document.title;
                if(!title.startsWith("New Quote")){
                $("#deps").show();
                $("#refs").show();

                if($("#dependents").css('visibility') != '@dependentsVisibility'){
                    $('#dependents').toggle(); 
                    toggleArrowDependents();
                }

                if($("#references").css('visibility') != '@referencesVisibility'){
                    $('#references').toggle(); 
                    toggleArrowReferences();
                }
            }
        });

        function toggleArrowDependents(){
            if ($("#depArrow").text() == "DEPENDENTS ⬇️") {
                    $("#depArrow").text("DEPENDENTS ➡️");
                    $.ajax({
                        url: "SetDepVisibility?visibility=" + "hidden",
                        type: 'GET',
                        dataType: "text",
                        cache: false,
                        beforeSend: function () {
                        },
                        complete: function () {
                        },
                        success: function (result) {
                        }
                    });   //end ajax
                }
            else {
                    $("#depArrow").text("DEPENDENTS ⬇️");
                    $.ajax({
                        url: "SetDepVisibility?visibility=" + "visible",
                        type: 'GET',
                        dataType: "text",
                        cache: false,
                        beforeSend: function () {
                        },
                        complete: function () {
                        },
                        success: function (result) {
                        }
                    });   //end ajax
                }
        }
    </script>
</body>
</html>
