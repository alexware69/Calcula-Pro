@using OnlinePriceSystem.Controllers
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Globalization

<style>
	#overlay {
		background-color: #aaaaaa;
		z-index: 999;
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		display: none;
		opacity: .3;
	}
</style>
<div style="border:1px solid #f6a828; width:100%; display:inline-block; text-align:center; background-color:#C0C0C0;">
	<label style="display:inline; color:#666666; background-color:#C0C0C0;">My Products</label>
	<div style="position:absolute;right:0; display:inline-block;">
		<div style="display:inline-block;vertical-align:middle;"> 
			<img align="left" title='Working...' style='display:none;' class='loading' src='../Images/ajax-bar.gif' alt='Working...'> &nbsp;
		</div>
	</div>
	</div>
<br/>
<br/>
<input style="display:inline-block" type="file" name="folder" id="folder" onchange="fileget(event)" webkitdirectory directory  />
@using (Html.BeginForm(null, null, FormMethod.Get, new { id = "productsform" }))
	{
	<input type="button" id="open" value="Open Folder" onclick="javascript:document.location='../../TreeView/Edit?product=Plastic Face'"/>
	<input type="button" value="New" onclick="javascript:document.location='../../TreeView/Edit?product=new'"/>	
	<br />
	<br />
}
<div>
    <button id="save-dialog" class="btn">Export</button>
	<button id="open-dialog" class="btn">Open Product</button>
</div>
<script>
    /*(function(){
        const { ipcRenderer } = require("electron");
        const fs = require('fs');
        var model = '@Html.Raw(Json.Serialize(@Model))';
        document.getElementById("save-dialog")
                .addEventListener("click", () => {
            ipcRenderer.send("save-dialog");
        });
        ipcRenderer.on("save-dialog-reply", (sender, path) => {
            if (!path) return;
            fs.writeFile(path, model, function (err) {
                console.log(err);
                return;
            });
        });
       
    }());*/

	(function(){
		const { ipcRenderer } = require("electron");
        const fs = require('fs');
		//var model = '@Html.Raw(Json.Serialize(@Model))';
		document.getElementById("open-dialog")
                .addEventListener("click", () => {
            ipcRenderer.send("open-dialog");
        });
		ipcRenderer.on("open-dialog-reply", (sender, path) => {
            return;
        });
	}());
</script>
<script>
	$('#folder').on('change',function ()
            {
                var filePath = $(this).val();
                alert(filePath);
            });
	//const ipcRenderer = window.require('electron').ipcRenderer;
  	 $(function() {
	    $( "input[type=submit], button" )
	      .button();
        $( "input[type=button], button" )
	      .button();
	  });

	(function ($) {
	    $.fn.styleTable = function (options) {
	        var defaults = {
	            css: 'ui-styled-table'
	        };
	        options = $.extend(defaults, options);

	        return this.each(function () {
	            $this = $(this);
	            $this.addClass(options.css);

	           
	           	
	            $this.find("th").addClass("ui-state-default");
	            $this.find("td").addClass("ui-widget-content");
	            $this.find("tr:last-child").addClass("last-child");
	        });
	    };
	})(jQuery);

	$("#Products").styleTable();
	
	//Download products
	$('#download').click(function () {
		document.location = "/MyProducts/Download?" + $('#productsform').serialize();

	});  

    /*(function(){
		const { ipcRenderer } = require("electron");
		 //Open Folder
    	document.getElementById("open")
                .addEventListener("click", () => {
            ipcRenderer.send("open-folder");
		});
		ipcRenderer.on('sel-dir', (event, path) => {
			const message = `This app is located at: ${path}`;
			alert(message);   
		})
    });*/



</script>
