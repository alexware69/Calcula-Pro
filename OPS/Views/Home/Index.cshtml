@using OnlinePriceSystem.Controllers
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Globalization

@{
	ViewData["Title"] = "Home";
	string Model = (string)TempData["quoteOnly"]!;
}
<style>
	.center {
    right: 50%;
    bottom: 50%;
    transform: translate(50%,50%);
    position: absolute;

	 /* Dark mode */
	@@media (prefers-color-scheme: dark) {
		body {
			background-color: black;
			color: white;
		}
		html{
			background-color: black;
			color: white;
		}
	}
}
</style>
 <style>
	body::before {
		content: "";
		position: fixed;
		left: 0;
		width: 100%;
		height: 100%;
		background: url('../Images/background.jpeg') no-repeat center center fixed;
		background-size: cover;
	}
	body {
		margin: 0;
		padding: 0;
	}
</style>
<div class="center">
	<button id="new-dialog" class="btn">New Definition</button>	
	<br/>
		<div style="display:inline-block;vertical-align:middle;"> 
	 	     	<img id="loading" align="center" title='Working...' style='display:none;' class='loading' alt='Working...'>&nbsp;
		</div>
	<br/>
	<button id="open-dialog" class="btn">Open Definition</button>
	
	<br/>
	<br/>
	<button id="open-dialog-view" class="btn">Create a Quote</button>
</div>
<script>
	const { ipcRenderer } = require("electron");
	const fs = require('fs');

	//Open Edit Definition dialog
	document.getElementById("open-dialog")
			.addEventListener("click", () => {
		//ipcRenderer.send("open-dialog");
		$.ajax({
			url: "../../Dialogs/Index?type=open-dialog",
			type: 'GET',
			dataType: 'json',
			cache: false,
			beforeSend: function () {
			},
			complete: function () {
			},
			success: function (result) {
			}
    	});   //end ajax
	});
	ipcRenderer.on("open-dialog-reply", (sender, path) => {
		if (!path || path == "") return;
		$("#new-dialog").hide();
		$("#open-dialog").hide();
		$("#open-dialog-view").hide();
		$(".loading").show();
		document.location='../../TreeView/Edit?product='+ path + '&isNew=false';
		return;
	});
	
	//Open New Quote dialog
	document.getElementById("open-dialog-view")
			.addEventListener("click", () => {
		//ipcRenderer.send("open-dialog-view");
		$.ajax({
			url: "../../Dialogs/Index?type=open-dialog-view",
			type: 'GET',
			dataType: 'json',
			cache: false,
			beforeSend: function () {
			},
			complete: function () {
			},
			success: function (result) {
			}
    	});   //end ajax
	});
	ipcRenderer.on("open-dialog-view-reply", (sender, path) => {
		if (!path || path == "") return;
		$("#new-dialog").hide();
		$("#open-dialog").hide();
		$("#open-dialog-view").hide();
		$(".loading").show();
		document.location='../../TreeView/NewQuote?product='+ path;
		return;
	});

	//Open New Definition dialog
	document.getElementById("new-dialog")
			.addEventListener("click", () => {
		//ipcRenderer.send("new-dialog");
		$.ajax({
			url: "../../Dialogs/Index?type=new-dialog",
			type: 'GET',
			dataType: 'json',
			cache: false,
			beforeSend: function () {
			},
			complete: function () {
			},
			success: function (result) {
			}
    	});   //end ajax
	});
	ipcRenderer.on("new-dialog-reply", (sender, path) => {
		if (!path || path == "") return;
		document.location='../../TreeView/Edit?product='+ path + '&isNew=true';
		return;
	});

	var width = 150;
	$("#new-dialog").width(width);
	$("#open-dialog").width(width);
	$("#open-dialog-view").width(width);
	
	
	if (@Model!.ToLower()){
	 	$("#new-dialog").hide();
		$("#open-dialog").hide();
	 }

	$( "input[type=submit], button" ).button();
</script>

<script>
	$( document ).ready(function() {
		$("#save").hide();
		$("#discard").hide();
	});

		function activateDarkMode() {
		// set style to dark
		$("#loading").attr("src", "../Images/loading.gif");
	}

	function activateLightMode() {
	// set style to light
		$("#loading").attr("src", "../Images/loading.gif");
	}

	window.matchMedia("(prefers-color-scheme: dark)").addListener(
		e => e.matches && activateDarkMode() // listener
	);

	window.matchMedia("(prefers-color-scheme: light)").addListener(
		e => e.matches && activateLightMode() // listener
	);

	$( document ).ready(function() {
		if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
			activateDarkMode();
		}

		if (window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches) {
			activateLightMode();
		}
	});
</script>
